{"version":3,"file":"js/custom/apps/ecommerce/catalog/save-product.js","mappings":";;;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://keenthemes/../src/js/custom/apps/ecommerce/catalog/save-product.js"],"sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTAppEcommerceSaveProduct = function () {\r\n\r\n    // Private functions\r\n\r\n    // Init quill editor\r\n    const initQuill = () => {\r\n        // Define all elements for quill editor\r\n        const elements = [\r\n            '#kt_ecommerce_add_product_description',\r\n            '#kt_ecommerce_add_product_meta_description'\r\n        ];\r\n\r\n        // Loop all elements\r\n        elements.forEach(element => {\r\n            // Get quill element\r\n            let quill = document.querySelector(element);\r\n\r\n            // Break if element not found\r\n            if (!quill) {\r\n                return;\r\n            }\r\n\r\n            // Init quill --- more info: https://quilljs.com/docs/quickstart/\r\n            quill = new Quill(element, {\r\n                modules: {\r\n                    toolbar: [\r\n                        [{\r\n                            header: [1, 2, false]\r\n                        }],\r\n                        ['bold', 'italic', 'underline'],\r\n                        ['image', 'code-block']\r\n                    ]\r\n                },\r\n                placeholder: 'Type your text here...',\r\n                theme: 'snow' // or 'bubble'\r\n            });\r\n        });\r\n    }\r\n\r\n    // Init tagify\r\n    const initTagify = () => {\r\n        // Define all elements for tagify\r\n        const elements = [\r\n            '#kt_ecommerce_add_product_category',\r\n            '#kt_ecommerce_add_product_tags'\r\n        ];\r\n\r\n        // Loop all elements\r\n        elements.forEach(element => {\r\n            // Get tagify element\r\n            const tagify = document.querySelector(element);\r\n\r\n            // Break if element not found\r\n            if (!tagify) {\r\n                return;\r\n            }\r\n\r\n            // Init tagify --- more info: https://yaireo.github.io/tagify/\r\n            new Tagify(tagify, {\r\n                whitelist: [\"new\", \"trending\", \"sale\", \"discounted\", \"selling fast\", \"last 10\"],\r\n                dropdown: {\r\n                    maxItems: 20,           // <- mixumum allowed rendered suggestions\r\n                    classname: \"tagify__inline__suggestions\", // <- custom classname for this dropdown, so it could be targeted\r\n                    enabled: 0,             // <- show suggestions on focus\r\n                    closeOnSelect: false    // <- do not hide the suggestions dropdown once an item has been selected\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Init form repeater --- more info: https://github.com/DubFriend/jquery.repeater\r\n    const initFormRepeater = () => {\r\n        $('#kt_ecommerce_add_product_options').repeater({\r\n            initEmpty: false,\r\n\r\n            defaultValues: {\r\n                'text-input': 'foo'\r\n            },\r\n\r\n            show: function () {\r\n                $(this).slideDown();\r\n\r\n                // Init select2 on new repeated items\r\n                initConditionsSelect2();\r\n            },\r\n\r\n            hide: function (deleteElement) {\r\n                $(this).slideUp(deleteElement);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Init condition select2\r\n    const initConditionsSelect2 = () => {\r\n        // Tnit new repeating condition types\r\n        const allConditionTypes = document.querySelectorAll('[data-kt-ecommerce-catalog-add-product=\"product_option\"]');\r\n        allConditionTypes.forEach(type => {\r\n            if ($(type).hasClass(\"select2-hidden-accessible\")) {\r\n                return;\r\n            } else {\r\n                $(type).select2({\r\n                    minimumResultsForSearch: -1\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    // Init noUIslider\r\n    const initSlider = () => {\r\n        var slider = document.querySelector(\"#kt_ecommerce_add_product_discount_slider\");\r\n        var value = document.querySelector(\"#kt_ecommerce_add_product_discount_label\");\r\n\r\n        noUiSlider.create(slider, {\r\n            start: [10],\r\n            connect: true,\r\n            range: {\r\n                \"min\": 1,\r\n                \"max\": 100\r\n            }\r\n        });\r\n\r\n        slider.noUiSlider.on(\"update\", function (values, handle) {\r\n            value.innerHTML = Math.round(values[handle]);\r\n            if (handle) {\r\n                value.innerHTML = Math.round(values[handle]);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Init DropzoneJS --- more info:\r\n    const initDropzone = () => {\r\n        var myDropzone = new Dropzone(\"#kt_ecommerce_add_product_media\", {\r\n            url: \"https://keenthemes.com/scripts/void.php\", // Set the url for your upload script location\r\n            paramName: \"file\", // The name that will be used to transfer the file\r\n            maxFiles: 10,\r\n            maxFilesize: 10, // MB\r\n            addRemoveLinks: true,\r\n            accept: function (file, done) {\r\n                if (file.name == \"wow.jpg\") {\r\n                    done(\"Naha, you don't.\");\r\n                } else {\r\n                    done();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // Handle discount options\r\n    const handleDiscount = () => {\r\n        const discountOptions = document.querySelectorAll('input[name=\"discount_option\"]');\r\n        const percentageEl = document.getElementById('kt_ecommerce_add_product_discount_percentage');\r\n        const fixedEl = document.getElementById('kt_ecommerce_add_product_discount_fixed');\r\n\r\n        discountOptions.forEach(option => {\r\n            option.addEventListener('change', e => {\r\n                const value = e.target.value;\r\n\r\n                switch (value) {\r\n                    case '2': {\r\n                        percentageEl.classList.remove('d-none');\r\n                        fixedEl.classList.add('d-none');\r\n                        break;\r\n                    }\r\n                    case '3': {\r\n                        percentageEl.classList.add('d-none');\r\n                        fixedEl.classList.remove('d-none');\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        percentageEl.classList.add('d-none');\r\n                        fixedEl.classList.add('d-none');\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Shipping option handler\r\n    const handleShipping = () => {\r\n        const shippingOption = document.getElementById('kt_ecommerce_add_product_shipping_checkbox');\r\n        const shippingForm = document.getElementById('kt_ecommerce_add_product_shipping');\r\n\r\n        shippingOption.addEventListener('change', e => {\r\n            const value = e.target.checked;\r\n\r\n            if (value) {\r\n                shippingForm.classList.remove('d-none');\r\n            } else {\r\n                shippingForm.classList.add('d-none');\r\n            }\r\n        });\r\n    }\r\n\r\n    // Category status handler\r\n    const handleStatus = () => {\r\n        const target = document.getElementById('kt_ecommerce_add_product_status');\r\n        const select = document.getElementById('kt_ecommerce_add_product_status_select');\r\n        const statusClasses = ['bg-success', 'bg-warning', 'bg-danger'];\r\n\r\n        $(select).on('change', function (e) {\r\n            const value = e.target.value;\r\n\r\n            switch (value) {\r\n                case \"published\": {\r\n                    target.classList.remove(...statusClasses);\r\n                    target.classList.add('bg-success');\r\n                    hideDatepicker();\r\n                    break;\r\n                }\r\n                case \"scheduled\": {\r\n                    target.classList.remove(...statusClasses);\r\n                    target.classList.add('bg-warning');\r\n                    showDatepicker();\r\n                    break;\r\n                }\r\n                case \"inactive\": {\r\n                    target.classList.remove(...statusClasses);\r\n                    target.classList.add('bg-danger');\r\n                    hideDatepicker();\r\n                    break;\r\n                }\r\n                case \"draft\": {\r\n                    target.classList.remove(...statusClasses);\r\n                    target.classList.add('bg-primary');\r\n                    hideDatepicker();\r\n                    break;\r\n                }\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n\r\n        // Handle datepicker\r\n        const datepicker = document.getElementById('kt_ecommerce_add_product_status_datepicker');\r\n\r\n        // Init flatpickr --- more info: https://flatpickr.js.org/\r\n        $('#kt_ecommerce_add_product_status_datepicker').flatpickr({\r\n            enableTime: true,\r\n            dateFormat: \"Y-m-d H:i\",\r\n        });\r\n\r\n        const showDatepicker = () => {\r\n            datepicker.parentNode.classList.remove('d-none');\r\n        }\r\n\r\n        const hideDatepicker = () => {\r\n            datepicker.parentNode.classList.add('d-none');\r\n        }\r\n    }\r\n\r\n    // Condition type handler\r\n    const handleConditions = () => {\r\n        const allConditions = document.querySelectorAll('[name=\"method\"][type=\"radio\"]');\r\n        const conditionMatch = document.querySelector('[data-kt-ecommerce-catalog-add-category=\"auto-options\"]');\r\n        allConditions.forEach(radio => {\r\n            radio.addEventListener('change', e => {\r\n                if (e.target.value === '1') {\r\n                    conditionMatch.classList.remove('d-none');\r\n                } else {\r\n                    conditionMatch.classList.add('d-none');\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    // Submit form handler\r\n    const handleSubmit = () => {\r\n        // Define variables\r\n        let validator;\r\n\r\n        // Get elements\r\n        const form = document.getElementById('kt_ecommerce_add_product_form');\r\n        const submitButton = document.getElementById('kt_ecommerce_add_product_submit');\r\n\r\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\r\n        validator = FormValidation.formValidation(\r\n            form,\r\n            {\r\n                fields: {\r\n                    'product_name': {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'Product name is required'\r\n                            }\r\n                        }\r\n                    },\r\n                    'sku': {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'SKU is required'\r\n                            }\r\n                        }\r\n                    },\r\n                    'sku': {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'Product barcode is required'\r\n                            }\r\n                        }\r\n                    },\r\n                    'shelf': {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'Shelf quantity is required'\r\n                            }\r\n                        }\r\n                    },\r\n                    'price': {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'Product base price is required'\r\n                            }\r\n                        }\r\n                    },\r\n                    'tax': {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'Product tax class is required'\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                plugins: {\r\n                    trigger: new FormValidation.plugins.Trigger(),\r\n                    bootstrap: new FormValidation.plugins.Bootstrap5({\r\n                        rowSelector: '.fv-row',\r\n                        eleInvalidClass: '',\r\n                        eleValidClass: ''\r\n                    })\r\n                }\r\n            }\r\n        );\r\n\r\n        // Handle submit button\r\n        submitButton.addEventListener('click', e => {\r\n            e.preventDefault();\r\n\r\n            // Validate form before submit\r\n            if (validator) {\r\n                validator.validate().then(function (status) {\r\n                    console.log('validated!');\r\n\r\n                    if (status == 'Valid') {\r\n                        submitButton.setAttribute('data-kt-indicator', 'on');\r\n\r\n                        // Disable submit button whilst loading\r\n                        submitButton.disabled = true;\r\n\r\n                        setTimeout(function () {\r\n                            submitButton.removeAttribute('data-kt-indicator');\r\n\r\n                            Swal.fire({\r\n                                text: \"Form has been successfully submitted!\",\r\n                                icon: \"success\",\r\n                                buttonsStyling: false,\r\n                                confirmButtonText: \"Ok, got it!\",\r\n                                customClass: {\r\n                                    confirmButton: \"btn btn-primary\"\r\n                                }\r\n                            }).then(function (result) {\r\n                                if (result.isConfirmed) {\r\n                                    // Enable submit button after loading\r\n                                    submitButton.disabled = false;\r\n\r\n                                    // Redirect to customers list page\r\n                                    window.location = form.getAttribute(\"data-kt-redirect\");\r\n                                }\r\n                            });\r\n                        }, 2000);\r\n                    } else {\r\n                        Swal.fire({\r\n                            html: \"Sorry, looks like there are some errors detected, please try again. <br/><br/>Please note that there may be errors in the <strong>General</strong> or <strong>Advanced</strong> tabs\",\r\n                            icon: \"error\",\r\n                            buttonsStyling: false,\r\n                            confirmButtonText: \"Ok, got it!\",\r\n                            customClass: {\r\n                                confirmButton: \"btn btn-primary\"\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            // Init forms\r\n            initQuill();\r\n            initTagify();\r\n            initSlider();\r\n            initFormRepeater();\r\n            initDropzone();\r\n            initConditionsSelect2();\r\n\r\n            // Handle forms\r\n            handleStatus();\r\n            handleConditions();\r\n            handleDiscount();\r\n            handleShipping();\r\n            handleSubmit();\r\n        }\r\n    };\r\n}();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTAppEcommerceSaveProduct.init();\r\n});\r\n"],"names":[],"sourceRoot":""}