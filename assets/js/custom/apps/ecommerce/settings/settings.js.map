{"version":3,"file":"js/custom/apps/ecommerce/settings/settings.js","mappings":";;;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,iDAAiD;AACjD,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://keenthemes/../src/js/custom/apps/ecommerce/settings/settings.js"],"sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTAppEcommerceSettings = function () {\r\n    // Shared variables\r\n\r\n\r\n    // Private functions\r\n    const initForms = () => {\r\n        const forms = [\r\n            'kt_ecommerce_settings_general_form',\r\n            'kt_ecommerce_settings_general_store',\r\n            'kt_ecommerce_settings_general_localization',\r\n            'kt_ecommerce_settings_general_products',\r\n            'kt_ecommerce_settings_general_customers',\r\n        ];\r\n\r\n        // Init all forms\r\n        forms.forEach(formId => {\r\n            // Select form\r\n            const form = document.getElementById(formId);\r\n\r\n            if(!form){\r\n                return;\r\n            }\r\n\r\n            // Dynamically create validation non-empty rule\r\n            const requiredFields = form.querySelectorAll('.required');\r\n            var detectedField;\r\n            var validationFields = {\r\n                fields: {},\r\n\r\n                plugins: {\r\n                    trigger: new FormValidation.plugins.Trigger(),\r\n                    bootstrap: new FormValidation.plugins.Bootstrap5({\r\n                        rowSelector: '.fv-row',\r\n                        eleInvalidClass: '',\r\n                        eleValidClass: ''\r\n                    })\r\n                }\r\n            }\r\n\r\n            // Detect required fields\r\n            requiredFields.forEach(el => {\r\n                const input = el.closest('.row').querySelector('input');\r\n                if (input) {\r\n                    detectedField = input;\r\n                }\r\n\r\n                const textarea = el.closest('.row').querySelector('textarea');\r\n                if (textarea) {\r\n                    detectedField = textarea;\r\n                }\r\n\r\n                const select = el.closest('.row').querySelector('select');\r\n                if (select) {\r\n                    detectedField = select;\r\n                }\r\n\r\n                // Add validation rule                \r\n                const name = detectedField.getAttribute('name');\r\n                validationFields.fields[name] = {\r\n                    validators: {\r\n                        notEmpty: {\r\n                            message: el.innerText + ' is required'\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\r\n            var validator = FormValidation.formValidation(\r\n                form,\r\n                validationFields\r\n            );\r\n\r\n            // Submit button handler\r\n            const submitButton = form.querySelector('[data-kt-ecommerce-settings-type=\"submit\"]');\r\n            submitButton.addEventListener('click', function (e) {\r\n                // Prevent default button action\r\n                e.preventDefault();\r\n\r\n                // Validate form before submit\r\n                if (validator) {\r\n                    validator.validate().then(function (status) {\r\n                        console.log('validated!');\r\n\r\n                        if (status == 'Valid') {\r\n                            // Show loading indication\r\n                            submitButton.setAttribute('data-kt-indicator', 'on');\r\n\r\n                            // Disable button to avoid multiple click \r\n                            submitButton.disabled = true;\r\n\r\n                            // Simulate form submission. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n                            setTimeout(function () {\r\n                                // Remove loading indication\r\n                                submitButton.removeAttribute('data-kt-indicator');\r\n\r\n                                // Enable button\r\n                                submitButton.disabled = false;\r\n\r\n                                // Show popup confirmation \r\n                                Swal.fire({\r\n                                    text: \"Form has been successfully submitted!\",\r\n                                    icon: \"success\",\r\n                                    buttonsStyling: false,\r\n                                    confirmButtonText: \"Ok, got it!\",\r\n                                    customClass: {\r\n                                        confirmButton: \"btn btn-primary\"\r\n                                    }\r\n                                });\r\n\r\n                                //form.submit(); // Submit form\r\n                            }, 2000);\r\n                        } else {\r\n                            // Show popup error \r\n                            Swal.fire({\r\n                                text: \"Oops! There are some error(s) detected.\",\r\n                                icon: \"error\",\r\n                                buttonsStyling: false,\r\n                                confirmButtonText: \"Ok, got it!\",\r\n                                customClass: {\r\n                                    confirmButton: \"btn btn-primary\"\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Init Tagify\r\n    const initTagify = () => {\r\n        // Get tagify elements\r\n        const elements = document.querySelectorAll('[data-kt-ecommerce-settings-type=\"tagify\"]');\r\n\r\n        // Init tagify\r\n        elements.forEach(element => {\r\n            new Tagify(element);\r\n        });\r\n    }\r\n\r\n    // Init Select2 with flags\r\n    const initSelect2Flags = () => {\r\n        // Format options\r\n        const optionFormat = (item) => {\r\n            if ( !item.id ) {\r\n                return item.text;\r\n            }\r\n\r\n            var span = document.createElement('span');\r\n            var template = '';\r\n\r\n            template += '<img src=\"' + item.element.getAttribute('data-kt-select2-country') + '\" class=\"rounded-circle h-20px me-2\" alt=\"image\"/>';\r\n            template += item.text;\r\n\r\n            span.innerHTML = template;\r\n\r\n            return $(span);\r\n        }\r\n\r\n        // Init Select2 --- more info: https://select2.org/\r\n        $('[data-kt-ecommerce-settings-type=\"select2_flags\"]').select2({\r\n            placeholder: \"Select a country\",\r\n            minimumResultsForSearch: Infinity,\r\n            templateSelection: optionFormat,\r\n            templateResult: optionFormat\r\n        });\r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n\r\n            initForms();\r\n            initTagify();\r\n            initSelect2Flags();\r\n\r\n        }\r\n    };\r\n}();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTAppEcommerceSettings.init();\r\n});\r\n"],"names":[],"sourceRoot":""}