# Generated by Django 4.1.3 on 2022-12-02 07:29

import annotation.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('kt_tasks', '0008_remove_tasks_is_line_annotation_done_and_more'),
        ('annotation', '0004_alter_fonthub_file'),
    ]

    operations = [
        migrations.AddField(
            model_name='wordannotation',
            name='font_color',
            field=models.CharField(blank=True, help_text='font color', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='wordannotation',
            name='heigh',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='top position of annotation', max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='wordannotation',
            name='left',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='left position of annotation', max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='wordannotation',
            name='top',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='top position of annotation', max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='wordannotation',
            name='width',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='top position of annotation', max_digits=5, null=True),
        ),
        migrations.CreateModel(
            name='LineRenderingParts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_number', models.IntegerField(blank=True, help_text='Part index of line', null=True)),
                ('text_case', models.CharField(blank=True, choices=[('lower', 'lower'), ('upper', 'upper'), ('camel', 'camel')], help_text='text case 1) lower 2) upper 3) camel', max_length=10, null=True)),
                ('stroke_width', models.IntegerField(blank=True, default=0, help_text='Width of text stroke', null=True)),
                ('font_size', models.IntegerField(blank=True, default=0, help_text='Font size for generated text', null=True)),
                ('margin', models.IntegerField(blank=True, default=3, help_text='Margin to render text', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('font', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='annotation.fonthub')),
                ('lang', models.ForeignKey(blank=True, help_text='Language of word', on_delete=django.db.models.deletion.DO_NOTHING, to='annotation.languagehub')),
                ('line', models.ForeignKey(blank=True, help_text='Line annotation for which we are rendering this line', on_delete=django.db.models.deletion.DO_NOTHING, to='annotation.lineannotation')),
            ],
        ),
        migrations.CreateModel(
            name='LineRendering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_multi_lang_parts', models.BooleanField(blank=True, default=False, help_text='Is it contains multiple language parts', null=True)),
                ('generated_line_image', models.ImageField(blank=True, null=True, upload_to=annotation.models.generated_line_image_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('line', models.ForeignKey(blank=True, help_text='Line annotation for which we are rendering this line', on_delete=django.db.models.deletion.DO_NOTHING, to='annotation.lineannotation')),
            ],
        ),
        migrations.CreateModel(
            name='AnnotationMetaInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_line_annotation_done', models.BooleanField(blank=True, default=False, help_text='Once user perform line level annotations and press save button line annotations will be saved and this will turned to true', null=True)),
                ('is_word_annotation_done', models.BooleanField(blank=True, default=False, help_text='After word level annotation save this will be turned on', null=True)),
                ('meta_json_file', models.FileField(blank=True, help_text='Meta data file to render new id card', null=True, upload_to='images/')),
                ('is_line_data_rendering_done', models.BooleanField(blank=True, default=False, help_text='After line and word annotation, background script will generate and render data.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('task', models.ForeignKey(blank=True, help_text='Task id in which this line annotation belongs', on_delete=django.db.models.deletion.DO_NOTHING, to='kt_tasks.tasks')),
            ],
        ),
    ]
